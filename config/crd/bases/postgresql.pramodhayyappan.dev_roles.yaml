---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: roles.postgresql.pramodhayyappan.dev
spec:
  group: postgresql.pramodhayyappan.dev
  names:
    kind: Role
    listKind: RoleList
    plural: roles
    singular: role
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[-1:].status
      name: Status
      type: string
    - jsonPath: .status.conditions[-1:].reason
      name: Reason
      type: string
    - jsonPath: .status.conditions[-1:].message
      name: Message
      priority: 1
      type: string
    - jsonPath: .status.conditions[-1:].lastTransitionTime
      name: Last Transition Time
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Role is the Schema for the roles API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: RoleSpec defines the desired state of Role
            properties:
              configurationParameters:
                description: |-
                  ConfigurationParameters to be applied to the role. If specified, any other configuration parameters set on the
                  role in the database will be reset.


                  See https://www.postgresql.org/docs/current/runtime-config-client.html for some available configuration parameters.
                items:
                  description: RoleConfigurationParameter is a role configuration
                    parameter.
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
              connectSecretRef:
                description: |-
                  ConnectSecretRef references the secret that contains the database connection details used
                  for this role.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    description: Name of the resource.
                    type: string
                  namespace:
                    description: Namespace of the resource.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
              options:
                description: Privileges to be granted.
                properties:
                  bypassRLS:
                    description: BypassRLS grants BYPASSRLS privilege when true.
                    type: boolean
                  canLogin:
                    description: CanLogin grants LOGIN privilege when true.
                    type: boolean
                  connectionLimit:
                    description: ConnectionLimit sets CONNECTION LIMIT.
                    format: int32
                    type: integer
                  createDB:
                    description: CreateDB grants CREATEDB privilege when true.
                    type: boolean
                  createRole:
                    description: CreateRole grants CREATEROLE privilege when true.
                    type: boolean
                  inherit:
                    description: Inherit grants INHERIT privilege when true.
                    type: boolean
                  replication:
                    description: Replication grants REPLICATION privilege when true.
                    type: boolean
                  superUser:
                    description: SuperUser grants SUPERUSER privilege when true.
                    type: boolean
                  validUntil:
                    description: ValidUntil sets VALID UNTIL.
                    type: string
                type: object
              passwordSecretRef:
                description: |-
                  PasswordSecretRef references the secret that contains the password used
                  for this role. If no reference is given, a password will be auto-generated.
                properties:
                  key:
                    description: The key to select.
                    type: string
                  name:
                    description: Name of the resource.
                    type: string
                  namespace:
                    description: Namespace of the resource.
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
            required:
            - connectSecretRef
            - passwordSecretRef
            type: object
          status:
            description: RoleStatus defines the observed state of Role
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
